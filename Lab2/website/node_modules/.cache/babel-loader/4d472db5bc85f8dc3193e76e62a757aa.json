{"ast":null,"code":"var _jsxFileName = \"/home/brennan/Lab2/website/src/WithAuth.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nexport default function withAuth(ComponentToProtect) {\n  return class extends Component {\n    constructor() {\n      super();\n      this.state = {\n        loading: true,\n        redirect: false,\n        email: false\n      };\n    }\n\n    componentDidMount() {\n      firebase.auth().onAuthStateChanged(user => {\n        if (user) {\n          firebase.auth().currentUser.getIdToken(false).then(token => {\n            this.setState({\n              loading: false,\n              redirect: false\n            });\n          });\n        } else {\n          this.setState({\n            loading: false,\n            redirect: true\n          });\n        }\n      });\n    }\n\n    render() {\n      const _this$state = this.state,\n            loading = _this$state.loading,\n            redirect = _this$state.redirect,\n            email = _this$state.email;\n\n      if (loading) {\n        return null;\n      }\n\n      if (redirect) {\n        return React.createElement(Redirect, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(ComponentToProtect, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })));\n    }\n\n  };\n}","map":{"version":3,"sources":["/home/brennan/Lab2/website/src/WithAuth.js"],"names":["React","Component","Redirect","firebase","withAuth","ComponentToProtect","constructor","state","loading","redirect","email","componentDidMount","auth","onAuthStateChanged","user","currentUser","getIdToken","then","token","setState","render","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AAEA,eAAe,SAASC,QAAT,CAAkBC,kBAAlB,EAAsC;AACnD,SAAO,cAAcJ,SAAd,CAAwB;AAC7BK,IAAAA,WAAW,GAAG;AACZ;AACA,WAAKC,KAAL,GAAa;AACXC,QAAAA,OAAO,EAAE,IADE;AAEXC,QAAAA,QAAQ,EAAE,KAFC;AAGXC,QAAAA,KAAK,EAAE;AAHI,OAAb;AAKD;;AAEDC,IAAAA,iBAAiB,GAAG;AAClBR,MAAAA,QAAQ,CAACS,IAAT,GAAgBC,kBAAhB,CAAoCC,IAAD,IAAU;AAC3C,YAAIA,IAAJ,EAAU;AACRX,UAAAA,QAAQ,CAACS,IAAT,GAAgBG,WAAhB,CAA4BC,UAA5B,CAAuC,KAAvC,EAA8CC,IAA9C,CAAmDC,KAAK,IAAI;AAC1D,iBAAKC,QAAL,CAAc;AAAEX,cAAAA,OAAO,EAAE,KAAX;AAAkBC,cAAAA,QAAQ,EAAE;AAA5B,aAAd;AACD,WAFD;AAGD,SAJD,MAIO;AACL,eAAKU,QAAL,CAAc;AAAEX,YAAAA,OAAO,EAAE,KAAX;AAAkBC,YAAAA,QAAQ,EAAE;AAA5B,WAAd;AACD;AACF,OARD;AASD;;AAEDW,IAAAA,MAAM,GAAG;AAAA,0BAC8B,KAAKb,KADnC;AAAA,YACCC,OADD,eACCA,OADD;AAAA,YACUC,QADV,eACUA,QADV;AAAA,YACoBC,KADpB,eACoBA,KADpB;;AAEP,UAAIF,OAAJ,EAAa;AACX,eAAO,IAAP;AACD;;AACD,UAAIC,QAAJ,EAAc;AACZ,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AACD,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,kBAAD,oBAAwB,KAAKY,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CADF;AAKD;;AAnC4B,GAA/B;AAqCD","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\n\nexport default function withAuth(ComponentToProtect) {\n  return class extends Component {\n    constructor() {\n      super();\n      this.state = {\n        loading: true,\n        redirect: false,\n        email: false\n      };\n    }\n\n    componentDidMount() {\n      firebase.auth().onAuthStateChanged((user) => {\n        if (user) {\n          firebase.auth().currentUser.getIdToken(false).then(token => {\n            this.setState({ loading: false, redirect: false })\n          })\n        } else {\n          this.setState({ loading: false, redirect: true })\n        }\n      })\n    }\n\n    render() {\n      const { loading, redirect, email } = this.state;\n      if (loading) {\n        return null;\n      }\n      if (redirect) {\n        return <Redirect to=\"/\" />;\n      }\n      return (\n        <React.Fragment>\n          <ComponentToProtect {...this.props} />\n        </React.Fragment >\n      );\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}