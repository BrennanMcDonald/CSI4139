{"ast":null,"code":"'use strict';\n\nconst path = require('path');\n\nconst win32 = process.platform === 'win32';\n\nconst _require = require('./constants'),\n      REGEX_SPECIAL_CHARS = _require.REGEX_SPECIAL_CHARS,\n      REGEX_SPECIAL_CHARS_GLOBAL = _require.REGEX_SPECIAL_CHARS_GLOBAL,\n      REGEX_REMOVE_BACKSLASH = _require.REGEX_REMOVE_BACKSLASH;\n\nexports.isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\n\nexports.hasRegexChars = str => REGEX_SPECIAL_CHARS.test(str);\n\nexports.isRegexChar = str => str.length === 1 && exports.hasRegexChars(str);\n\nexports.escapeRegex = str => str.replace(REGEX_SPECIAL_CHARS_GLOBAL, '\\\\$1');\n\nexports.toPosixSlashes = str => str.replace(/\\\\/g, '/');\n\nexports.removeBackslashes = str => {\n  return str.replace(REGEX_REMOVE_BACKSLASH, match => {\n    return match === '\\\\' ? '' : match;\n  });\n};\n\nexports.supportsLookbehinds = () => {\n  let segs = process.version.slice(1).split('.');\n\n  if (segs.length === 3 && +segs[0] >= 9 || +segs[0] === 8 && +segs[1] >= 10) {\n    return true;\n  }\n\n  return false;\n};\n\nexports.isWindows = options => {\n  if (options && typeof options.windows === 'boolean') {\n    return options.windows;\n  }\n\n  return win32 === true || path.sep === '\\\\';\n};\n\nexports.escapeLast = (input, char, lastIdx) => {\n  let idx = input.lastIndexOf(char, lastIdx);\n  if (idx === -1) return input;\n  if (input[idx - 1] === '\\\\') return exports.escapeLast(input, char, idx - 1);\n  return input.slice(0, idx) + '\\\\' + input.slice(idx);\n};","map":null,"metadata":{},"sourceType":"script"}